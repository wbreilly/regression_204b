c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
AIC(m2)
p1 +  geom_smooth(method='lm',formula= y ~ x + I(x^5))
p1 +  geom_smooth(method='lm',formula= y ~ x + I(x^2))
p1 +  geom_smooth(method='lm',formula= y ~ x + I(x^1))
p1 +  geom_smooth(method='lm',formula= y ~ x + I(x^10))
p1 +  geom_smooth(method='lm',formula= y ~ x + I(x^2))
p1 +  geom_smooth(method='lm',formula= y ~ x)
p1 = p1 +  geom_smooth(method='lm',formula= y ~ x)
p1 = p1 +  geom_line(method='lm',formula= y ~ x)
p1 = p1 +  geom_line
p1 = p1 +  geom_line()
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
p1 +  geom_smooth(method='lm',formula= y ~ x + I(x^2))
p1 = p1 + geom_point() + ggtitle("Pigeon Pecking") + labs(x = "Trial", y = "Pecks")
p1
#3b
rm(p1)
p1 <- ggplot(d, aes(trial, pecks))
p1 = p1 + geom_point() + ggtitle("Pigeon Pecking") + labs(x = "Trial", y = "Pecks")
p1
m1 = lm(d$pecks ~ d$trial)
summary(m1)
AIC(m1);BIC(m1);
3 = nls(pecks ~ a + sin(trial) + trial , start = list(a = 0), data = d)
library(nlme)
3 = nls(pecks ~ a + sin(trial) + trial , start = list(a = 0), data = d)
summary(m3)
3 = nls(pecks ~ a +trial + sin(trial)  , start = list(a = 0), data = d)
3 = nls(pecks ~ a + b(trial) + sin(trial)  , start = list(a = 0, b = 0), data = d)
3 = nls(pecks ~ b(trial) + sin(trial)  , start = list( b = 0), data = d)
summary(m3)
m3 = nls(pecks ~ b(trial) + sin(trial)  , start = list( b = 0), data = d)
m3 = nls(pecks ~ a + b(trial) + sin(trial)  , start = list(a = 0, b = 0), data = d)
summary(m3)
m3 = nls(pecks ~ a(trial) + sin(trial)  , start = list(a = 0), data = d)
summary(m3)
m3 = nls(pecks ~ a +  sin(trial), start = list(a = 0), data = d)
summary(m3)
m3 = nls(pecks ~ a + trial+  sin(trial), start = list(a = 0), data = d)
summary(m3)
m3 = nls(pecks ~ a + a(trial) +  sin(trial), start = list(a = 0), data = d)
m3 = nls(pecks ~ a + a*(trial) +  sin(trial), start = list(a = 0), data = d)
summary(m3)
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
AIC(m3)
plot(d$trial,d$pecks)
c = coef(m3)
c
curve(c[1] + c[2]*trial + sin(x), add = TRUE, lty = 1, col = "red")
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red")
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 3, col = "red")
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", pch = 5)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", pch = 20)
?curve
AIC(m3);BIC(m3)
plot(trial,pecks, data = d)
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red")
abline(lm(formula = pecks ~ trial, data = d), col = "blue")
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green")
AIC(m1);BIC(m1);
AIC(m2);BIC(m2);
AIC(m3);BIC(m2);
AIC(m3);BIC(m3);
AIC(m1);BIC(m1);
AIC(m2);BIC(m2);
AIC(m3);BIC(m3);
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking" , legend())
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking" , legend(m1,m2,m3))
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red")
legend("bottomright", legend(c("M1", "M2, "M3")))
legend("bottomright", legend(c("M1", "M2, "M3")))
legend("bottomright", legend = c("M1", "M2, "M3"))
legend("bottomright", legend = c("M1", "M2", "M3"))
legend("topleft", legend = c("M1", "M2", "M3"))
legend("topleft", legend = c("M1 ", "M2 ", "M3 "))
legend("topleft", legend = c("M1 ", "M2 ", "M3 "), inset = c(0.1, 0.1))
legend("topleft", legend = c("M1 ", "M2 ", "M3 "), col = c("blue","green","red"),inset = c(0.1, 0.1))
legend("topleft", legend = c("M1 ", "M2 ", "M3 "), col = c("blue","green","red"), pch = 15, inset = c(0.1, 0.1))
#3a have a looksies
plot(d$trial,d$pecks)
#3b
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue")
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
# add line
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green")
library(nlme)
#sine model
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red")
#add legend
legend("topleft", legend = c("M1 ", "M2 ", "M3 "), col = c("blue","green","red"), pch = 15, inset = c(0.1, 0.1))
plot( xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
#3b
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue")
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
# add line
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green")
library(nlme)
#sine model
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red")
#add legend
legend("topleft", legend = c("M1 ", "M2 ", "M3 "), col = c("blue","green","red"), pch = 15, inset = c(0.1, 0.1))
?graph
??graph
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking", lwd = 2)
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue")
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
abline(lm(formula = pecks ~ trial, data = d), col = "blue", lwd = 2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green",lwd = 2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green",lwd = 2)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", lwd = 2)
3a have a looksies
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
#3b
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue", lwd = 2)
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
# add line
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green",lwd = 2)
library(nlme)
#sine model
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", lwd = 2)
#add legend
legend("topleft", legend = c("M1 ", "M2 ", "M3 "), col = c("blue","green","red"), pch = 15, inset = c(0.1, 0.1))
rm(legend)
#3a have a looksies
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
#3b
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue", lwd = 2)
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
# add line
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green",lwd = 2)
library(nlme)
#sine model
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", lwd = 2)
#add legend
legend("topleft", legend = c("lm(y~x) ", "lm(y~ x + I(x^5)) ", "nls(y~ a + b *x + sin(x)) "), col = c("blue","green","red"), pch = 15, inset = c(0.1, 0.1))
#3a have a looksies
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
#3b
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue", lwd = 2)
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
# add line
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green",lwd = 2)
library(nlme)
#sine model
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", lwd = 2)
#add legend
legend("topleft", bty = "n", legend = c("lm(y~x) ", "lm(y~ x + I(x^5)) ", "nls(y~ a + b *x + sin(x)) "), col = c("blue","green","red"), pch = 15, inset = c(0.1, 0.1))
#3a have a looksies
plot(d$trial,d$pecks, xlab = "Trial", ylab = "Pecks", main = "Pigeon Pecking")
#3b
m1 = lm(d$pecks ~ d$trial)
summary(m1)
#add line to plot
abline(lm(formula = pecks ~ trial, data = d), col = "blue", lwd = 2)
# use quadratic
m2 = lm(pecks ~ trial + I(trial^5), data = d)
summary(m2)
# add line
c = coef(m2)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "green",lwd = 2)
library(nlme)
#sine model
m3 = nls(pecks ~ a + b*(trial) +  sin(trial), start = list(a = 0, b = 0), data = d)
summary(m3)
c = coef(m3)
curve(c[1] + c[2]*x + sin(x), add = TRUE, lty = 1, col = "red", lwd = 2)
#add legend
legend("topleft", bty = "n", legend = c("lm(y~x) ", "lm(y~ x + I(x^5)) ", "nls(y~ a + b *x + sin(x)) "), col = c("blue","green","red"), pch = 15, inset = c(0.05, 0.1))
AIC(m1);BIC(m1);
AIC(m2);BIC(m2);
AIC(m3);BIC(m3);
summary(m1)
summary(m2)
summary(m3)
d = read.csv(moderation.csv)
d = read.csv("moderationFinalExam.csv")
View(d)
m.int = lm(y  ~ x1 * x2, data = d)
summary(m.int)
c = coef(m.int)
c
m.int = lm(y  ~ x1 * x2, data = d)
summary(m.int)
c = coef(m.int)
c
#4b  plot moderation of x2 on x1 and y
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
coef(m.int)
d$hn2 <- c[1] + c[2]*n2sd +
c[3]*d$x1 + c[4]*n2sd*d$x1
d$hcsd <- c[1] + c[2]*csd +
c[3]*d$x1 + c[4]*csd*d$x1
d$hp2 <- c[1] + c[2]*p2sd +
c[3]*d$x1 + c[4]*p2sd*d$x1
d <- d[order(d$x1),]
plot(d$x1,d$x2,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
lines(c(0,0),c(0,10))
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
c[1]
c[1] + c[2]
c[2]
lines(c(0,0),c(0,1))
lines(c(0,0),c(0,1))
lines(c(0,0),c(0,1))
#4a
m.int = lm(y  ~ x1 * x2, data = d)
summary(m.int)
c = coef(m.int)
c
#4b  plot moderation of x2 on x1 and y
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
coef(m.int)
d$hn2 <- c[1] + c[2]*n2sd +
c[3]*d$x1 + c[4]*n2sd*d$x1
d$hcsd <- c[1] + c[2]*csd +
c[3]*d$x1 + c[4]*csd*d$x1
d$hp2 <- c[1] + c[2]*p2sd +
c[3]*d$x1 + c[4]*p2sd*d$x1
d <- d[order(d$x1),]
plot(d$x1,d$x2,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
plot(d$x1,d$x2,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
#4b  plot moderation of x2 on x1 and y
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
coef(m.int)
d$hn2 <- c[1] + c[2]*n2sd +
c[3]*d$x1 + c[4]*n2sd*d$x1
d$hcsd <- c[1] + c[2]*csd +
c[3]*d$x1 + c[4]*csd*d$x1
d$hp2 <- c[1] + c[2]*p2sd +
c[3]*d$x1 + c[4]*p2sd*d$x1
d <- d[order(d$x1),]
plot(d$x1,d$y,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
plot(d$x1,d$y,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
??plot
plot(d$independence,d$happy,
type = "p",
main = "Moderated Associations of Independence and Happiness",
ylab = "Association of Independence and Happiness",
xlab = "Independence Scores")
plot(d$x1,d$y,
type = "p",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
d <- read.csv("lab06dat.csv")
head(d)
summary(d)
m4 <- lm(happy ~ perceivedfree + independence +
perceivedfree*independence, data = d)
summary(m4)
n2sd <- -1*sd(d$perceivedfree)+mean(d$perceivedfree)
p2sd <- 1*sd(d$perceivedfree)+mean(d$perceivedfree)
csd <- mean(d$perceivedfree)
n2sd;csd;p2sd
coef(m4)
d$hn2 <- coef(m4)[1] + coef(m4)[2]*n2sd +
coef(m4)[3]*d$independence + coef(m4)[4]*n2sd*d$independence
d$hcsd <- coef(m4)[1] + coef(m4)[2]*csd +
coef(m4)[3]*d$independence + coef(m4)[4]*csd*d$independence
d$hp2 <- coef(m4)[1] + coef(m4)[2]*p2sd +
coef(m4)[3]*d$independence + coef(m4)[4]*p2sd*d$independence
d <- d[order(d$independence),]
plot(d$independence,d$happy,
type = "n",
main = "Moderated Associations of Independence and Happiness",
ylab = "Association of Independence and Happiness",
xlab = "Independence Scores")
lines(d$independence,d$hn2, lwd = 3, col = "blue")
lines(d$independence,d$hcsd, lwd = 3, col = "red")
lines(d$independence,d$hp2, lwd = 3, col = "green")
lines(c(0,0),c(0,10))
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
#4a
m.int = lm(y  ~ x1 * x2, data = d)
summary(m.int)
c = coef(m.int)
c
#4b  plot moderation of x2 on x1 and y
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
d = read.csv("moderationFinalExam.csv")
#4a
m.int = lm(y  ~ x1 * x2, data = d)
summary(m.int)
c = coef(m.int)
c
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
c
d$hn2 <- coef(m.int)[1] + coef(m.int)[3]*n2sd +
coef(m.int)[2]*d$x1 + coef(m.int)[4]*n2sd*d$x1
d$hcsd <- coef(m.int)[1] + coef(m.int)[3]*csd +
coef(m.int)[2]*d$x1 + coef(m.int)[4]*csd*d$x1
d$hp2 <- coef(m.int)[1] + coef(m.int)[3]*p2sd +
coef(m.int)[2]*d$x1 + coef(m.int)[4]*p2sd*d$x1
d <- d[order(d$x1),]
plot(d$x1,d$y,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
legend(-2,38,lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
legend = c("-1SD","0SD","1SD"))
legend("bottomleft", lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
legend("bottomleft",col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
legend = c("-1SD","0SD","1SD"))
legend("bottomleft", lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
legend("bottomleft",bty = "n", lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
#4a
m.int = lm(y  ~ x1 * x2, data = d)
summary(m.int)
c = coef(m.int)
c
#4b  plot moderation of x2 on x1 and y
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
coef(m.int)
d$hn2 <- coef(m.int)[1] + coef(m.int)[3]*n2sd +
coef(m.int)[2]*d$x1 + coef(m.int)[4]*n2sd*d$x1
d$hcsd <- coef(m.int)[1] + coef(m.int)[3]*csd +
coef(m.int)[2]*d$x1 + coef(m.int)[4]*csd*d$x1
d$hp2 <- coef(m.int)[1] + coef(m.int)[3]*p2sd +
coef(m.int)[2]*d$x1 + coef(m.int)[4]*p2sd*d$x1
d <- d[order(d$x1),]
plot(d$x1,d$y,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
legend("bottomleft",bty = "n", lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
summary(m.int)
c
d$x1 = d$x1 - mean(d$x1)
d$x2 = d$x2 - mean(d$x2)
m.int2 = lm(y  ~ x1 * x2, data = d)
summary(m.int)
summary(m.int2)
# plot moderation again after mean centering
n2sd <- -1*sd(d$x2)+mean(d$x2)
p2sd <- 1*sd(d$x2)+mean(d$x2)
csd <- mean(d$x2)
n2sd;csd;p2sd
coef(m.int2)
d$hn2 <- coef(m.int2)[1] + coef(m.int2)[3]*n2sd +
coef(m.int2)[2]*d$x1 + coef(m.int2)[4]*n2sd*d$x1
d$hcsd <- coef(m.int2)[1] + coef(m.int2)[3]*csd +
coef(m.int2)[2]*d$x1 + coef(m.int2)[4]*csd*d$x1
d$hp2 <- coef(m.int2)[1] + coef(m.int2)[3]*p2sd +
coef(m.int2)[2]*d$x1 + coef(m.int2)[4]*p2sd*d$x1
d <- d[order(d$x1),]
plot(d$x1,d$y,
type = "n",
main = "Moderated Associations of x1 and y by x2",
ylab = "Y",
xlab = "X1")
lines(d$x1,d$hn2, lwd = 3, col = "blue")
lines(d$x1,d$hcsd, lwd = 3, col = "red")
lines(d$x1,d$hp2, lwd = 3, col = "green")
legend("bottomleft",bty = "n", lty = c(1,1,1),col = c("blue","red","green"),
legend = c("-1SD","0SD","1SD"))
d = read.csv("moderationFinalExam.csv")
m.int
m.int2
fat <- read.table("~/walter/regression_204b/fat.txt", quote="\"", comment.char="")
View(fat)
rm(fat)
d <- read.table("~/walter/regression_204b/fat.txt", quote="\"", comment.char="")
colnames(d, c("id","age","menarche.a","menarche.t","pfat"))
colnames(d, c("id","age","menarche.a","menarche.t","pfat"))
??colnames
colnames(d) =  c("id","age","menarche.a","menarche.t","pfat")
unique.ps = unique(d$id)
p <- ggplot(data = d, aes(x = age, y = pfat, group = id))
require(ggplot2)
p <- ggplot(data = d, aes(x = age, y = pfat, group = id))
p  + geom_line() + ggtitle("Age and Body Fat %")
rand.samp = sample.int(162, size = 50, replace = FALSE)
library(tidyverse)
dspag = d %>% filter(id %in% rand.samp)
p <- ggplot(data = d, aes(x = age, y = pfat, group = id))
p  + geom_line() + ggtitle("Age and Body Fat %")
p <- ggplot(data = dspag, aes(x = age, y = pfat, group = id))
p  + geom_line() + ggtitle("Age and Body Fat %")
p  + geom_line() + ggtitle("Age and Body Fat %") + labs(x = Current Age, y = Body Fat Percentage)
p  + geom_line() + ggtitle("Age and Body Fat %") + labs(x = "Current Age", y = "Body Fat Percentage")
