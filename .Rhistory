summary(aov(rt ~ learning * order + Error(subject), d25strict[which(d25strict$repetition == 3),]))
summary(aov(rt ~ learning * order + Error(subject), d25strict[which(d25strict$repetition == 4),]))
View(sumstats.pos)
counts = count(group_by(dclean,condition, position))
View(counts)
sumstats.pos[,5] = counts[,3]
sumstats.pos = mutate(sumstats.pos, SE = SD/sqrt(n))
limits <- aes(ymax = sumstats25$mean + sumstats25$SE,
ymin = sumstats25$mean - sumstats25$SE)
limits <- aes(ymax = sumstats25$mean + sumstats25$SE,
ymin = sumstats25$mean - sumstats25$SE)
p3 <- ggplot(data = sumstats25, aes(x = factor(position), y = mean,
fill = factor(condition)))
p3 = p3 + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Position", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Condition")
p3
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(position), y = mean,
fill = factor(condition)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Position", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Condition")
p.pos.con
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con
xlim
ylim(c(700,400))
p.pos.con
p.pos.con + continuous_scale(aesthetics = c("RT", "ymin","ymax")
)
p.pos.con + continuous_scale(aesthetics = c("RT", "ymin","ymax"))
p.pos.con + continuous_scale(aesthetics = c("y", "ymin","ymax"))
p.pos.con + ylim(400,700)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con + ylim(400,700)
p.pos.con
p.pos.con + ylim(c(400,700))
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
ylim(c(400,700))
p.pos.con
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
scale_y_continuous(limits=c(400,700))
p.pos.con
# create a bar graph
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
scale_y_continuous(limits=c(400,700))
p.pos.con
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
scale_y_discrete(limits=c(400,700))
p.pos.con
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
scale_y_discrete(limits=c(400,700))
p.pos.con
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
scale_y_continuous(limits=c(400,700))
p.pos.con
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
scale_y_continuous(ymin = 400)
p.pos.con
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position") +
ylim(400,700)
p.pos.con
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con
p.pos.con = p.pos.con + ylim(400,700)
p.pos.con
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con
p.pos.con + coord_cartesian(ylim=c(400,700))
p.pos.con
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con + coord_cartesian(ylim=c(400,700))
p.pos.con
rm(p.pos.con)
limits <- aes(ymax = sumstats.pos$mean + sumstats.pos$SE,
ymin = sumstats.pos$mean - sumstats.pos$SE)
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")
p.pos.con + coord_cartesian(ylim=c(400,700))
p.pos.con
p.pos.con = p.pos.con + coord_cartesian(ylim=c(400,700))
p.pos.con
p.pos.con = p.pos.con + coord_cartesian(ylim=c(400,750))
p.pos.con
p.pos.con <- ggplot(data = sumstats.pos, aes(x = factor(condition), y = mean,
fill = factor(position)))
p.pos.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Condition", y = "RT") +
ggtitle("RT by Position and Condition") +
scale_fill_discrete(name = "Position")  +
scale_x_discrete("Conditions", labels =
c("1" = "Intact-Learned", "2" = "Intact-New",
"3" = "Scrambled-Learned", "4" = " Scrambled-New"))
p.pos.con = p.pos.con + coord_cartesian(ylim=c(400,750))
p.pos.con
fastRTs = count(dclean, RT < 100)
fastRTs = count(dclean, rt < 100)
View(fastRTs)
fastRTs = count(dclean, rt < 150)
fastRTs = count(dclean, rt < 190)
fastRTs = count(dclean, rt < 100)
p.pos =  ggplot(data=sumstats.pos, aes(x=position, y=mean, group=condition, colour = condition)) +
geom_line(stat = "identity") +
ggtitle("SMS1: Condition * Repetion RTs")
p.pos
p.rep.25 =  ggplot(data=d25sumstats.rep.con, aes(x=repetition, y=mean, group=condition, colour = condition)) +
geom_line(stat = "identity") +
ggtitle("SMS1: Condition * Repetion RTs Pos's 2-5")
p.rep.25
View(d25sumstats.rep.con)
counts2 = count(group_by(d25,condition, repetition))
View(counts2)
tail(dclean)
exrows3 = dclean[!(dclean$position == 1),13]
d25 = dclean[c(exrows3),]
rm(d25)
exrows3 = dclean[!(dclean$position == 1),13]
d25 = dclean[c(exrows3),]
dclean = mutate(clean, obs = 1:5207)
exrows3 = dclean[!(dclean$position == 1),13]
d25 = dclean[c(exrows3),]
rm(d25)
dclean = mutate(clean, obs = 1:5207)
dclean = mutate(dclean, obs = 1:5207)
exrows3 = dclean[!(dclean$position == 1),13]
d25 = dclean[c(exrows3),]
View(d25)
d25sumstats = d25 %>% group_by(condition) %>% summarise(mean = mean(rt), SD = sd(rt))
d25sumstats.rep = d25 %>% group_by(repetition) %>% summarise(mean = mean(rt), SD = sd(rt))
d25sumstats.rep.con = d25 %>% group_by(repetition,condition) %>% summarise(mean = mean(rt), SD = sd(rt))
# trial counts
d25.counts = count(d25, condition)
d25 = mutate(d25, order = condition < 3)
d25 = mutate(d25, learning = condition == 2 | condition == 4)
summary(aov(rt ~ learning * order  + Error(subject), data = d25))
summary(aov(rt ~ learning * order * repetition + Error(subject), data = d25))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 1),]))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 2),]))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 3),]))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 4),]))
summary(aov(rt ~ condition, data = d25))
summary(aov(rt ~ condition * repetition, data = d25))
summary(aov(rt ~ learning * order  + Error(subject), data = d25))
summary(aov(rt ~ learning * order * repetition + Error(subject), data = d25))
d25sumstats = d25 %>% group_by(condition) %>% summarise(mean = mean(rt), SD = sd(rt))
d25sumstats.rep = d25 %>% group_by(repetition) %>% summarise(mean = mean(rt), SD = sd(rt))
d25sumstats.rep.con = d25 %>% group_by(repetition,condition) %>% summarise(mean = mean(rt), SD = sd(rt))
d25.counts = count(d25, condition)
counts2 = count(group_by(d25,condition, repetition))
View(dclean)
View(d25sumstats.rep.con)
p.pos.con
d25sumstats.rep.con[,5] = counts2[,3]
# add n to sumstats
d25sumstats.rep.con[,5] = counts2[,3]
# add SE
d25sumstats.rep.con = mutate(d25sumstats.rep.con, SE = SD/sqrt(n))
# create a bar graph
limits <- aes(ymax = d25sumstats.rep.con$mean + d25sumstats.rep.con$SE,
ymin = d25sumstats.rep.con$mean - d25sumstats.rep.con$SE)
p.rep.con <- ggplot(data = d25sumstats.rep.con, aes(x = factor(condition), y = mean,
fill = factor(repetition)))
p.rep.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Conditions", y = "Pos 2-5 Mean RT") +
ggtitle("Mean RT by Condition and Repetition") +
scale_fill_discrete(name = "Repetition")  +
scale_x_discrete("Conditions", labels =
c("1" = "Intact-Learned", "2" = "Intact-New",
"3" = "Scrambled-Learned", "4" = " Scrambled-New"))
p.rep.con
# create a bar graph
limits <- aes(ymax = d25sumstats.rep.con$mean + d25sumstats.rep.con$SE,
ymin = d25sumstats.rep.con$mean - d25sumstats.rep.con$SE)
p.rep.con <- ggplot(data = d25sumstats.rep.con, aes(x = factor(condition), y = mean,
fill = factor(repetition)))
p.rep.con = p.pos.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Conditions", y = "Pos 2-5 Mean RT") +
ggtitle("Mean RT by Condition and Repetition") +
scale_x_discrete("Conditions", labels =
c("1" = "Intact-Learned", "2" = "Intact-New",
"3" = "Scrambled-Learned", "4" = " Scrambled-New"))
p.rep.con
p.rep.con <- ggplot(data = d25sumstats.rep.con, aes(x = factor(condition), y = mean,
fill = factor(repetition)))
p.rep.con = p.rep.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Conditions", y = "Pos 2-5 Mean RT") +
ggtitle("Mean RT by Condition and Repetition") +
scale_x_discrete("Conditions", labels =
c("1" = "Intact-Learned", "2" = "Intact-New",
"3" = "Scrambled-Learned", "4" = " Scrambled-New"))
p.rep.con
p.rep.con = p.rep.con + coord_cartesian(ylim=c(400,750))
p.rep.con
p.pos.con
p.rep.con
p.rep.con <- ggplot(data = d25sumstats.rep.con, aes(x = factor(condition), y = mean,
fill = factor("Repetition")))
p.rep.con = p.rep.con + geom_bar(stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Conditions", y = "Pos 2-5 Mean RT") +
ggtitle("Mean RT by Condition and Repetition") +
scale_x_discrete("Conditions", labels =
c("1" = "Intact-Learned", "2" = "Intact-New",
"3" = "Scrambled-Learned", "4" = " Scrambled-New"))
p.rep.con = p.rep.con + coord_cartesian(ylim=c(400,750))
p.rep.con
p.rep.con <- ggplot(data = d25sumstats.rep.con, aes(x = factor(condition), y = mean,
fill = factor(repetition)))
p.rep.con = p.rep.con + geom_bar(stat = "identity",position = position_dodge(0.9)) +
geom_errorbar(limits, position = position_dodge(0.9),
width = 0.15) +
labs(x = "Conditions", y = "Pos 2-5 Mean RT") +
ggtitle("Mean RT by Condition and Repetition") +
scale_x_discrete("Conditions", labels =
c("1" = "Intact-Learned", "2" = "Intact-New",
"3" = "Scrambled-Learned", "4" = " Scrambled-New"))
p.rep.con = p.rep.con + coord_cartesian(ylim=c(400,750))
p.rep.con
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 4),]))
summary(aov(rt ~ condition + Error(subject), d25[which(d25$repetition == 4),]))
learning * order
summary(aov(rt ~ learning * order * repetition + Error(subject), data = d25))
t.test(which(d25$condition == 2, repetition==4),which(d25$condition == 4, repetition==4))
t.test(which(d25$condition == 2, d25$repetition==4),which(d25$condition == 4, d25$repetition==4))
?? t.test
t.test(d25$rt[which(d25$condition == 2, d25$repetition==1),],which(d25$condition == 4, d25$repetition==4))
t.test(which(d25$rt,d25$condition == 2, d25$repetition==1),which(d25$rt,d25$condition == 4, d25$repetition==4))
p.rep.con
p.pos.con
unique(dclean[c("subject", "condition")])
unique(dclean[c("subject")])
p.pos.con
p.rep.con
View(sumstats)
library(tidyverse)
d25sumstats.mains = d25 %>% group_by(order) %>% summarise(mean = mean(rt), SD = sd(rt))
View(d25sumstats.mains)
d25sumstats.mains = d25 %>% group_by(order,learning) %>% summarise(mean = mean(rt), SD = sd(rt))
View(d25sumstats.mains)
d25sumstats.mains = d25 %>% group_by(order) %>% summarise(mean = mean(rt), SD = sd(rt))
View(d25sumstats.mains)
t.test(which(d25$order == TRUE), which(d25$order == FALSE))
t.test(which(d25$order == TRUE,d25$rt), which(d25$order == FALSE,d25$rt))
summary(aov(rt ~ learning * order * repetition + Error(subject), data = d25))
summary(aov(rt ~ learning * order * repetition + Error(subject / (learning * order * repetition) ), data = d25))
dclean %>% group_by(subject) %>% count(rt < 100)
fastRTs = dclean %>% group_by(subject) %>% count(rt < 100)
View(fastRTs)
summary(aov(rt ~ learning * order * repetition + Error(subject / (learning * order * repetition) ), data = d25))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 1),]))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 2),]))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 3),]))
summary(aov(rt ~ learning * order + Error(subject), d25[which(d25$repetition == 4),]))
summary(aov(rt ~ learning * order * repetition + Error(subject  ), data = d25))
View(d25)
library(tidyverse)
sub.con.mean.rt = dsansnas %>%  group_by(subject,condition) %>%
summarise(mean = mean(rt, na.rm = TRUE), SD = sd(rt, na.rm = TRUE))
View(sub.con.mean.rt)
getwd()
setwd(regression)
ls
setwd("regression_204b")
setwd(regression_204b)
temp <- matrix(c(
1,   .5,   .5,   .5,
.5,    1,   .3,   .3,
.5,   .3,    1,   .2,
.5,   .3,   .2,    1), nrow = 4, ncol = 4, byrow = TRUE)
install.packages('MBESS') #may take a while, be patient
library(MBESS)
temp2 = cor2cov(temp, c(1,2,3,10))
library(MASS)
set.seed(200)
temp3 = as.data.frame(mvrnorm(100, c(0,0,0,0), temp2, empirical = TRUE))
summary(temp3)
cov(temp3)
cov(temp3[,1], temp3[,2])
cor(temp3) #correlation matrix
cor.test(temp3$V2, temp3$V3)
install.packages("afex")
install.packages('ltm')
temp3$male = 0
temp3[which(temp3[,4] > 0),'male'] = 1
library(ltm)
temp3$male = as.factor(temp3$male)
biserial.cor(temp3$V1, temp3$male)
install.packages('psych')
library(psych)
phi(example, digits = 3)
phi(c(19,54,60,52), digits = 3)
example =  matrix(c(19,54,60,52), nrow = 2, ncol = 2, byrow = TRUE)
phi(example, digits = 3)
phi(c(19,54,60,52), digits = 3)
mod1 = lm(V1 ~ V2, data = temp3)
summary(mod1)
setwd(walter)
setwd("walter")
setwd("regression_204b")
library(ltm)
library(MASS)
library(MBESS)
d = read.csv("Tworek&Cimpian_2016.csv")
View(d)
cor(d$Inherence_Bias, d$Should_Score)
cor.test(d$Inherence_Bias, d$Should_Score)
mod1 = lm(Should_Score ~ Inherence_Bias, data = d)
summary(mod1)
cor(d$Inherence_Bias, d$Should_Score)
coef(summary(mod1))
library(QuantPsyc)
install.packges("QuantPsyc")
install.packages("QuantPsyc")
library(QuantPsyc)
lm.beta(mod1)
cor(d$Inherence_Bias, d$Should_Score)
mod1z <- lm(scale(d$Should_Score)[,1] ~ scale(d$Inherence_Bias)[,1])
mod1z
summary(mod1z)
cor(d$Inherence_Bias, d$Should_Score)
coef(summary(mod1))
lm.beta(mod1)
cor(d$Inherence_Bias, d$Should_Score)
mod1z <- lm(scale(d$Should_Score)[,1] ~ scale(d$Inherence_Bias)[,1])
mod1z
summary(mod1z)
shouldVec <- d$Should_Score
inhVec <- d$Inherence_Bias
coef(summary(lm(shouldVec ~ inhVec)))
lm(shouldVec ~ inhVec)
inhVec2 <- inhVec - mean(inhVec)
summary(lm(shouldVec ~ inhVec2))$coef
shouldVec2 <- shouldVec - mean(shouldVec)
lm(shouldVec2 ~ inhVec)
summary(lm(shouldVec2 ~ inhVec))
set.seed(32)
x1 <- sample(seq(0,20,.5),200, replace = TRUE)
y1 <- 5 + 2*x1 + .2*x1^2 + -0.015*x1^3 + rnorm(200,0,5)
par(mfrow = c(1,2))
plot(x1,
resid(lm(y1 ~ x1 + I(x1^2) + I(x1^3)))
)
plot(x1,
resid(lm(y1 ~ x1 + I(x1^2)))
)
plot(x1,resid(lm(y1 ~ x1 + I(x1^2) + I(x1^3))))
lines(lowess(x1,
resid(lm(y1 ~ x1 + I(x1^2) + I(x1^3))),
f = .4), lwd = 3, col = "green")
plot(x1,resid(lm(y1 ~ x1 + I(x1^2))))
lines(lowess(x1,
resid(lm(y1 ~ x1 + I(x1^2))),
f = .4), lwd = 3, col = "green")
