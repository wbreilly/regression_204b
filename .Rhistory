abline(lm(formula = y2 ~ x1, data = d), col = "red")
#sine model
nlm3 = nls(y2 ~ a + sin(x1), start = list(a = 5), data = d)
summary(nlm3)
c = coef(nlm3)
curve(c[1] + sin(x), add = TRUE, lty = 1, col = "red")
# use cubic
nlm4 = lm(y1 ~ x1 + I(x1^3), data = d)
summary(nlm4)
c = coef(nlm4)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
AIC(m2); AIC(nlm3); AIC(nlm4)
BIC(m2); BIC(nlm3); BIC(nlm4)
###########
# predict y3 with x1
#standard lm
m3 = lm(y3 ~ x1, data = d)
summary(m3)
abline(lm(formula = y3 ~ x1, data = d), col = "red")
# use quadratic
nlm5 = lm(y3 ~ x1 + I(x1^2), data = d)
summary(nlm5)
c = coef(nlm5)
curve(c[1] + c[2]*x + c[3]*(x^2), add = TRUE, lty = 1, col = "red")
# use cubic
nlm6 = lm(y3 ~ x1 + I(x1^3), data = d)
summary(nlm6)
c = coef(nlm6)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
# try log
nlm7 = nls(y3 ~ a + logb(x, b= 1.25 ), start = list(a = 0), data = d) #think of a as your "intercept" and b as your "slope"
summary(nlm7)
c = coef(nlm7)
curve(c[1] + logb(x, b = 1.25), add = TRUE, lty = 1, col = "red")
AIC(m3); AIC(nlm5); AIC(nlm6); AIC(nlm7)
BIC(m3); BIC(nlm5); BIC(nlm6); BIC(nlm7)
AIC(m1);AIC(nlm1);AIC(nlm2)
BIC(m1);BIC(nlm1);BIC(nlm2)
plot(d$x1,d$y1)
m1 = lm(y1 ~ x1, data = d)
summary(m1)
abline(lm(formula = y1 ~ x1, data = d), col = "red")
nlm1 = lm(y1 ~ x1 + I(x1^2), data = d)
summary(nlm1)
c = coef(nlm1)
curve(c[1] + c[2]*x + c[3]*(x^2), add = TRUE, lty = 1, col = "red")
# try log
nlm2 = nls(y1 ~ a - log(x1), start = list(a = 4), data = d) #think of a as your "intercept" and b as your "slope"
summary(nlm2)
c = coef(nlm2)
curve(c[1] - log(x), add = TRUE, lty = 1, col = "red")
AIC(m1);AIC(nlm1);AIC(nlm2)
BIC(m1);BIC(nlm1);BIC(nlm2)
plot(d$x1,d$y2)
m2 = lm(y2 ~ x1, data = d)
summary(m2)
abline(lm(formula = y2 ~ x1, data = d), col = "red")
#sine model
nlm3 = nls(y2 ~ a + sin(x1), start = list(a = 5), data = d)
summary(nlm3)
c = coef(nlm3)
curve(c[1] + sin(x), add = TRUE, lty = 1, col = "red")
# use cubic
nlm4 = lm(y1 ~ x1 + I(x1^3), data = d)
summary(nlm4)
c = coef(nlm4)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
AIC(m2); AIC(nlm3); AIC(nlm4)
BIC(m2); BIC(nlm3); BIC(nlm4)
plot(d$x1,d$y3)
m3 = lm(y3 ~ x1, data = d)
summary(m3)
abline(lm(formula = y3 ~ x1, data = d), col = "red")
# use quadratic
nlm5 = lm(y3 ~ x1 + I(x1^2), data = d)
summary(nlm5)
c = coef(nlm5)
curve(c[1] + c[2]*x + c[3]*(x^2), add = TRUE, lty = 1, col = "red")
# use cubic
nlm6 = lm(y3 ~ x1 + I(x1^3), data = d)
summary(nlm6)
c = coef(nlm6)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
# try log
nlm7 = nls(y3 ~ a + logb(x, b= 1.25 ), start = list(a = 0), data = d) #think of a as your "intercept" and b as your "slope"
summary(nlm7)
c = coef(nlm7)
curve(c[1] + logb(x, b = 1.25), add = TRUE, lty = 1, col = "red")
AIC(m3); AIC(nlm5); AIC(nlm6); AIC(nlm7)
BIC(m3); BIC(nlm5); BIC(nlm6); BIC(nlm7)
d = read.csv("~/walter/regression_204b/nonlinearhw.csv")
plot(d$x1,d$y3)
m3 = lm(y3 ~ x1, data = d)
summary(m3)
abline(lm(formula = y3 ~ x1, data = d), col = "red")
# use quadratic
nlm5 = lm(y3 ~ x1 + I(x1^2), data = d)
summary(nlm5)
c = coef(nlm5)
curve(c[1] + c[2]*x + c[3]*(x^2), add = TRUE, lty = 1, col = "red")
# use cubic
nlm6 = lm(y3 ~ x1 + I(x1^3), data = d)
summary(nlm6)
c = coef(nlm6)
curve(c[1] + c[2]*x + c[3]*(x^3), add = TRUE, lty = 1, col = "red")
# try log
nlm7 = nls(y3 ~ a + logb(x, b= 1.25 ), start = list(a = 0), data = d) #think of a as your "intercept" and b as your "slope"
nlm7 = nls(y3 ~ a + logb(x1, b= 1.25 ), start = list(a = 0), data = d) #think of a as your "intercept" and b as your "slope"
summary(nlm7)
c = coef(nlm7)
curve(c[1] + logb(x, b = 1.25), add = TRUE, lty = 1, col = "red")
AIC(m3); AIC(nlm5); AIC(nlm6); AIC(nlm7)
BIC(m3); BIC(nlm5); BIC(nlm6); BIC(nlm7)
m1 = lm(y1 ~ x1, data = d)
summary(m1)
d = read.csv("~/drive/ASBI.davis/WBR.ANALOGY,MMCB, RAVENS, REMOTE, VOCAB, AMBIG -5.27.csv")
View(d)
plot(d$AR.score.rt..Amb.corr.rt...Fill.corr.rt.,d$MMCB..Mean.Quiz1Master.ACC.)
plot(d$MMCB..Mean.Quiz1Master.ACC.,d$AR.score.rt..Amb.corr.rt...Fill.corr.rt.)
plot(d$AR.score.rt..Amb.corr.rt...Fill.corr.rt.,d$MMCB..Mean.Quiz1Master.ACC.,)
plot(d$AR.score.rt..Amb.corr.rt...Fill.corr.rt.,d$MMCB..Mean.Quiz1Master.ACC.)
m1 = lm(d$MMCB..Mean.Quiz1Master.ACC. ~ d$AR.score.rt..Amb.corr.rt...Fill.corr.rt.)
summary(m1)
abline(lm(formula = d$MMCB..Mean.Quiz1Master.ACC. ~ d$AR.score.rt..Amb.corr.rt...Fill.corr.rt.), col = "red")
d = read.delim("aids.txt")
View(d)
d = read.csv("aids.txt")
View(d)
d = read.delim2("aids.txt")
View(d)
d = read.delim("aids.txt", header = FALSE, sep = "\t")
View(d)
aids <- read.table("~/walter/regression_204b/aids.txt", quote="\"", comment.char="")
View(aids)
d <- read.table("aids.txt", quote="\"", comment.char="")
d <- read.table("aids.txt", quote="\", comment.char="")
"
rm(aids)
colnames(d) = c("ID","Treatment","Age","Gender(Male=1)","Week","logCD4")
tail(d)
?? randu
randasamp = sample.int(1313, size = 50, replace = FALSE)
randsamp
randasamp
library(tidyverse)
dspag = d %>% filter(ID %in% randasamp)
View(dspag)
unique(dspag$ID)
randasamp
rand.samp = sample.int(1313, size = 50, replace = FALSE)
dspag = d %>% filter(ID %in% rand.samp)
p <- ggplot(data = dspag, aes(x = Time, y = logCD4, group = ID))
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID))
p + geom_line
p + geom_point()
p + geom_line()
p + geom_point()+ geom_line() + ggtitle("AIDS")
p + geom_point() + geom_line() + ggtitle("AIDS")
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, factor = Treatment))
p  + geom_line() + ggtitle("AIDS") + factor()
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, factor = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = Treatment, fill = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID,  fill = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = factor(Week), y = logCD4, group = ID, colour = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor("Treatment")))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line() + ggtitle("AIDS")
d$Treatment = as.factor(d$Treatment)
d$Treatment = as.factor(d$Treatment)
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = Treatment))
p  + geom_line() + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line() + ggtitle("AIDS") + guide_legend(title = Treatment)
p  + geom_line() + ggtitle("AIDS") + guide_legend(title = "Treatment")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line() + ggtitle("AIDS") + guide_legend(title = "Treatment")
p  + geom_line() + ggtitle("AIDS") + guide_legend(title = waiver("Treatment"))
p  + geom_line() + ggtitle("AIDS") + guide_legend(title = "Treatment")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment),guide_legend(title = "Treatment")))
p  + geom_line() + ggtitle("AIDS")
p  + geom_line() + ggtitle("AIDS") +  scale_fill_continuous(guide_legend(title = "Treatment"))
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line() + ggtitle("AIDS") +  scale_fill_continuous(guide_legend(title = "Treatment"))
p  + geom_line(guide_legend(title = "Treatment")) + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line(guide_legend(title = "Treatment")) + ggtitle("AIDS")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment),guide_legend(title = "Treatment")))
p  + geom_line() + ggtitle("AIDS")
library(nlme)
m1 = lme(logCD4 ~ Treatment + Gender + Week, random = ~ 1 | ID, method = "REML", data = d) #random intercept only
colnames(d) = c("ID","Treatment","Age","Gender","Week","logCD4")
m1 = lme(logCD4 ~ Treatment + Gender + Week, random = ~ 1 | ID, method = "REML", data = d) #random intercept only
summary(m1)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1 | ID, method = "REML", data = d) #random intercept only
summary(m1)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random =  ID, method = "REML", data = d) #random intercept only
summary(m1)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random =  | ID, method = "REML", data = d) #random intercept only
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~  | ID, method = "REML", data = d) #random intercept only
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
d$Treatment = as.factor(d$Treatment)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
??method
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment),guide_legend(title = "Treatment")))
p  + geom_line() + ggtitle("AIDS") + labs(colour = "Treatment")
library(tidyverse)
d = read.table("aids.txt", quote="\"", comment.char="")
colnames(d) = c("ID","Treatment","Age","Gender","Week","logCD4")
rand.samp = sample.int(1313, size = 50, replace = FALSE)
# create new df with rand IDS
dspag = d %>% filter(ID %in% rand.samp)
#spag plot
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment),guide_legend(title = "Treatment")))
p  + geom_line() + ggtitle("AIDS") + labs(colour = "Treatment")
p <- ggplot(data = dspag, aes(x = Week, y = logCD4, group = ID, colour = factor(Treatment)))
p  + geom_line() + ggtitle("AIDS") + labs(colour = "Treatment")
library(nlme)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
m1 = lme(logCD4 ~ Treatment + Gender , random = ~ 1  | ID | Week, method = "REML", data = d) #random intercept only
summary(m1)
m1 = lme(logCD4 ~ Treatment + Gender , random = ~ 1  | Week, method = "REML", data = d) #random intercept only
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
m2 = lme(logCD4 ~ Treatment + Gender , random = ~ 1  | Week, method = "REML", data = d) #random intercept only
summary(m1)
summary(m2)
m2 = lme(logCD4 ~ Treatment + Gender , random = ~ 1 + Week | ID, method = "REML", data = d) #random intercept only
summary(m2)
d$Treatment = as.factor(d$Treatment)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
# mixed effects mod with random intercept for ID
d$Treatment = as.factor(d$Treatment)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
#3
# miced effects model with random int and random slope for week
m2 = lme(logCD4 ~ Treatment + Gender , random = ~ 1 + Week | ID, method = "REML", data = d) #random intercept only
summary(m2
)
m1 = lme(logCD4 ~ Week + Treatment + Gender , random = ~ 1  | ID, method = "REML", data = d) #random intercept only
summary(m1)
m2 = lme(logCD4 ~ Treatment + Gender , random = ~ 1 + Week | ID, method = "REML", data = d) #random intercept only
summary(m2)
AIC(m1); AIC(m2); BIC(m1);BIC(m2); aov(m1,m2)
AIC(m1); AIC(m2); BIC(m1);BIC(m2); LRT(m1,m2)
AIC(m1); AIC(m2); BIC(m1);BIC(m2); anova(m1,m2)
anova(m1,m2)
d = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
<<<<<<< HEAD
d = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
names(d)[1] <- "id" #since we don't want the special character
View(d)
=======
View(d)
#Reshape data into a long format ===========
names(d)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
>>>>>>> adc79e570e74deb247eb4c4e916d59b64d99fa92
dlong = reshape(d, idvar = "d", varying = c(list(names(d)[2:12]), list(names(d)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
<<<<<<< HEAD
View(dlong)
#reorder by subject number
dlong = dlong[order(dlong$id),]
require(ggplot2)
p <- ggplot(data = dlong, aes(x = PD, y = pdScore, group = id))
p + geom_line()
library(tidyverse)
??melt
=======
#reorder by subject number
dlong = dlong[order(dlong$id),]
View(dlong)
require(ggplot2)
p <- ggplot(data = dlong, aes(x = PD, y = pdScore, group = id))
p + geom_line()
#spegetti plot for the social circle distribution of wealth in sample
p <- ggplot(data = dlong, aes(x = SC, y = scScore, group = id))
p + geom_line()
redistrAttitudeData = data.frame(d$redist1, d$redist2, d$redist3, d$redist4)
#let's take a peak at the correlation among the items
cor(redistrAttitudeData)
#it looks like some of the items in this scale are reverse coded
#let's recode the items
#install.packages("car")
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
d$redist4 = recode(d$redist4, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
redistrAttitudeData = data.frame(d$redist1, d$redist2, d$redist3, d$redist4)
library(psych)
alpha(redistrAttitudeData)
ICC(redistrAttitudeData) #average_random_raters
dwide = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
dwide = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
#Reshape data into a long format ===========
names(dwide)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
d = reshape(dwide, idvar = "d", varying = c(list(names(d)[2:12]), list(names(d)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
dwide = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
names(dwide)[1] <- "id" #since we don't want the special character
d = reshape(dwide, idvar = "dwide", varying = c(list(names(dwide)[2:12]), list(names(dwide)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
library(afex)
library(tidyverse)
library(psych)
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
d$redist4 = recode(d$redist4, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
dwide = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
names(dwide)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
d = reshape(dwide, idvar = "dwide", varying = c(list(names(dwide)[2:12]), list(names(dwide)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
d = d[order(d$id),]
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
load in the extra credit assignment
d = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
#Reshape data into a long format ===========
names(d)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
dlong = reshape(d, idvar = "d", varying = c(list(names(d)[2:12]), list(names(d)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
#reorder by subject number
dlong = dlong[order(dlong$id),]
############ include random effect of subject in XC analyses ###############
#spegetti plot of the perceived distribution of wealth in US
require(ggplot2)
p <- ggplot(data = dlong, aes(x = PD, y = pdScore, group = id))
p + geom_line()
#spegetti plot for the social circle distribution of wealth in sample
p <- ggplot(data = dlong, aes(x = SC, y = scScore, group = id))
p + geom_line()
#computing reliability of composite scores --------------
#we often use scales in psychological research in which items in the scale measure the same
#underlying construct. In this case, researchers use a variety of techniques to combine items
#and reduce the dimensionality of the data
#in the extra credit data, we have a measure of attitudes toward economic redistribution
#in which several items all theoretically measure the same attitude
#Dawtry et al collapse these four items into a composite scale
#let's see if we can gather some evidence to support this decision
#cronbach's alpha ============
redistrAttitudeData = data.frame(d$redist1, d$redist2, d$redist3, d$redist4)
#let's take a peak at the correlation among the items
cor(redistrAttitudeData)
#it looks like some of the items in this scale are reverse coded
#let's recode the items
#install.packages("car")
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
d$redist4 = recode(d$redist4, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
redistrAttitudeData = data.frame(d$redist1, d$redist2, d$redist3, d$redist4)
#install.packages("psych")
library(psych)
#compute cronbach's alpha among the items
#alpha = 0.8 is usually good reliability
alpha(redistrAttitudeData)
#interclass correlation ===================
#interclass correlation is another measure of reliability
#a more conservative test of reliability of the measure
ICC(redistrAttitudeData) #average_random_raters
#an interclass correlation that approaches 1 is good!
#load in the extra credit assignment
d = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
#Reshape data into a long format ===========
names(d)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
dlong = reshape(d, idvar = "d", varying = c(list(names(d)[2:12]), list(names(d)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
#reorder by subject number
dlong = dlong[order(dlong$id),]
############ include random effect of subject in XC analyses ###############
#spegetti plot of the perceived distribution of wealth in US
require(ggplot2)
p <- ggplot(data = dlong, aes(x = PD, y = pdScore, group = id))
p + geom_line()
#spegetti plot for the social circle distribution of wealth in sample
p <- ggplot(data = dlong, aes(x = SC, y = scScore, group = id))
p + geom_line()
#computing reliability of composite scores --------------
#we often use scales in psychological research in which items in the scale measure the same
#underlying construct. In this case, researchers use a variety of techniques to combine items
#and reduce the dimensionality of the data
#in the extra credit data, we have a measure of attitudes toward economic redistribution
#in which several items all theoretically measure the same attitude
#Dawtry et al collapse these four items into a composite scale
#let's see if we can gather some evidence to support this decision
#cronbach's alpha ============
redistrAttitudeData = data.frame(d$redist1, d$redist2, d$redist3, d$redist4)
#let's take a peak at the correlation among the items
cor(redistrAttitudeData)
#it looks like some of the items in this scale are reverse coded
#let's recode the items
#install.packages("car")
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
d$redist4 = recode(d$redist4, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
redistrAttitudeData = data.frame(d$redist1, d$redist2, d$redist3, d$redist4)
#install.packages("psych")
library(psych)
#compute cronbach's alpha among the items
#alpha = 0.8 is usually good reliability
alpha(redistrAttitudeData)
#interclass correlation ===================
#interclass correlation is another measure of reliability
#a more conservative test of reliability of the measure
ICC(redistrAttitudeData) #average_random_raters
dwide = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
names(dwide)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
d = reshape(dwide, idvar = "dwide", varying = c(list(names(dwide)[2:12]), list(names(dwide)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
d = d[order(d$id),]
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
d$redist4 = recode(d$redist4, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
library(tidyverse)
library(psych)
d = d %>% mutate(Redist.Comp = alpha(d$redist1,d$redist2,d$redist3,d$redist4))
>>>>>>> adc79e570e74deb247eb4c4e916d59b64d99fa92
dwide = read.csv("Dawtry Sutton and Sibley 2015 Study 1a.csv")
#Reshape data into a long format ===========
names(dwide)[1] <- "id" #since we don't want the special character
#reshape multiple variables at once
d = reshape(dwide, idvar = "dwide", varying = c(list(names(dwide)[2:12]), list(names(dwide)[15:25])),
v.names = c("pdScore", "scScore"), timevar = c("PD", "SC"),
times = c(15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165), #times has to have the same values for both variables
direction = "long"
)
#reorder by subject number
d = d[order(d$id),]
#recode wonky ones
library(car)
d$redist2 = recode(d$redist2, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
d$redist4 = recode(d$redist4, '1=6; 2=5; 3=4; 4=3; 5=2; 6=1')
donner = read.table("https://onlinecourses.science.psu.edu/stat504/sites/onlinecourses.science.psu.edu.stat504/files/lesson07/donner.txt", header = FALSE)
names(donner) = c("Age", "Sex", "Survival") #Sex (0 = female, 1 = male), Survival (0 = died, 1 = survived)
View(donner)
class(donner$Sex);class(donner$Survival) #they aren't
donner$Sex = as.factor(donner$Sex);donner$Survival = as.factor(donner$Survival)
summary(donner) #notice we only have 45 subjects - this is a subset of the 87
mod1 = lm(Survival ~ Age + Sex, data = donner) #trick question, lm won't let us do it
mod2 = glm(Survival ~ Age, family = "binomial", data = donner)
summary(mod2)
coef(mod2) #can't just say the intercept is the probability of survival when every other coefficient is 0. Why?
mod3 = glm(Survival ~ Age + Sex, family = "binomial", data = donner)
coef(mod3)
anova(mod2,mod3) #LRT for logistic regression will not provide you with a p-value. Need to compute the p-value using R.
AIC(mod2);AIC(mod3)	#AIC favors mod3
BIC(mod2);BIC(mod3)	#BIC favors mod3
pchisq(5.03, 1, lower.tail = FALSE) #<.05 so we favor mod3
donner$Survival = as.integer(donner$Survival)
plot(Survival ~ Age, xlab = "Age", ylab = "Survival", main = "Probability of Surviving as Function of Age", data = donner)
points(Survival[Sex == "1"] ~ Age[Sex == "1"], pch = 16, col = "dark blue", data = donner)
points(Survival[Sex == "0"] ~ Age[Sex == "0"], pch = 16, col = "hot pink", data = donner)
c = coef(mod3)
curve(exp(c[1]+c[2]*x)/(1+exp(c[1]+c[2]*x)), add = TRUE, lty = 3, col = "hot pink")
curve(exp(c[1]+c[2]*x+c[3])/(1+exp(c[1]+c[2]*x+c[3])), add = TRUE, lty = 2, col = "dark blue")
legend(50, 0.8, c("Female", "Male"), lty = c(3,2), col = c("hot pink", "dark blue"))
legend(50, 0.8, c("Female", "Male"), lty = c(3,2), col = c("hot pink", "dark blue"))
c = coef(mod3)
curve(exp(c[1]+c[2]*x)/(1+exp(c[1]+c[2]*x)), add = TRUE, lty = 3, col = "hot pink")
curve(exp(c[1]+c[2]*x+c[3])/(1+exp(c[1]+c[2]*x+c[3])), add = TRUE, lty = 2, col = "dark blue")
legend(50, 0.8, c("Female", "Male"), lty = c(3,2), col = c("hot pink", "dark blue"))
